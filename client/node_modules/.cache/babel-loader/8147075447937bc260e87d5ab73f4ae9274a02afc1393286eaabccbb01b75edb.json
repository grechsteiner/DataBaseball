{"ast":null,"code":"var _jsxFileName = \"D:\\\\2B\\\\cs348\\\\Project\\\\baseball-app\\\\client\\\\src\\\\pages\\\\Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n\n// Leaderboard page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const [listOfPlayers, setListOfPlayers] = useState([]);\n  useEffect(() => {\n    // fetch always succeeds (besides network error), so need additional error checking\n    const year = 2022;\n    const minGames = 20;\n    fetch(`http://localhost:3001/leaderboard?year=${year}&minGames=${minGames}`).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        console.log(\"FETCH failed\");\n      }\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setListOfPlayers(data);\n      }\n    }).catch(error => console.log(\"ERROR\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listOfPlayers.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: player.playerID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Home Runs: \", player.HR]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Games Played: \", player.G]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, player.ID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n_s(Leaderboard, \"cmryiaZXUcziKmoAkM6SoxklFMg=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Leaderboard","_s","listOfPlayers","setListOfPlayers","year","minGames","fetch","then","res","ok","json","console","log","data","error","catch","children","map","player","playerID","fileName","_jsxFileName","lineNumber","columnNumber","HR","G","ID","_c","$RefreshReg$"],"sources":["D:/2B/cs348/Project/baseball-app/client/src/pages/Leaderboard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// Leaderboard page\r\n\r\nfunction Leaderboard() {\r\n    const [listOfPlayers, setListOfPlayers] = useState([]);\r\n    useEffect(() => {\r\n        // fetch always succeeds (besides network error), so need additional error checking\r\n        const year = 2022;\r\n        const minGames = 20;\r\n        fetch(`http://localhost:3001/leaderboard?year=${year}&minGames=${minGames}`)\r\n          .then((res) => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            } else {\r\n              console.log(\"FETCH failed\");\r\n            }\r\n          })\r\n          .then((data) => {\r\n            if (data.error) {\r\n              console.log(data.error);\r\n            } else {\r\n              setListOfPlayers(data);\r\n            }\r\n          })\r\n          .catch((error) => console.log(\"ERROR\", error));\r\n      }, []); \r\n\r\n    return (\r\n      <div>\r\n        {listOfPlayers.map((player) => (\r\n          <div key={player.ID}> {/* <div key={`${player.playerID}-${player.year}-${player.stint}`}>*/}\r\n            <h2>{player.playerID}</h2> \r\n            <p>Home Runs: {player.HR}</p>\r\n            <p>Games Played: {player.G}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Leaderboard;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtDD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,IAAI,GAAG,IAAI;IACjB,MAAMC,QAAQ,GAAG,EAAE;IACnBC,KAAK,CAAC,0CAA0CF,IAAI,aAAaC,QAAQ,EAAE,CAAC,CACzEE,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,EAAE,EAAE;QACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACnB,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,KAAK,EAAE;QACdH,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLX,gBAAgB,CAACU,IAAI,CAAC;MACxB;IACF,CAAC,CAAC,CACDE,KAAK,CAAED,KAAK,IAAKH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAER,oBACEf,OAAA;IAAAiB,QAAA,EACGd,aAAa,CAACe,GAAG,CAAEC,MAAM,iBACxBnB,OAAA;MAAAiB,QAAA,GAAqB,GAAC,eACpBjB,OAAA;QAAAiB,QAAA,EAAKE,MAAM,CAACC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BxB,OAAA;QAAAiB,QAAA,GAAG,aAAW,EAACE,MAAM,CAACM,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BxB,OAAA;QAAAiB,QAAA,GAAG,gBAAc,EAACE,MAAM,CAACO,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHvBL,MAAM,CAACQ,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGZ;AAACtB,EAAA,CApCQD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}