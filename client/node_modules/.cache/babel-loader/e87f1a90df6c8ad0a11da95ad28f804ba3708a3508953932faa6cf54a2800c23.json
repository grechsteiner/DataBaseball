{"ast":null,"code":"var _jsxFileName = \"D:\\\\2B\\\\cs348\\\\Project\\\\baseball-app\\\\client\\\\src\\\\pages\\\\Players.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Players() {\n  _s();\n  const [listOfForms, setListOfForms] = useState([]);\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    // fetch always succeeds (besides network error), so need additional error checking\n    fetch(\"http://localhost:3001/player\", {\n      method: \"GET\",\n      headers: {},\n      body: JSON.stringify\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        console.log(\"FETCH failed\");\n      }\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setListOfForms(data);\n      }\n    }).catch(error => console.log(\"ERROR\", error));\n  }, []);\n  function handleChange(event) {\n    setName(event.target.value);\n  }\n  function checkName(player) {\n    return player.nameGiven.toLowerCase().includes(name.toLowerCase());\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Players\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"player\",\n      onChange: handleChange,\n      placeholder: \"Search by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), listOfForms.filter(checkName).map((player, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playerName\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: player.nameGiven\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, player.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Players, \"1e/yrVjtXt/d2EBPVajYQRLUvrI=\");\n_c = Players;\nexport default Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Players","_s","listOfForms","setListOfForms","name","setName","fetch","method","headers","body","JSON","stringify","then","res","ok","json","console","log","data","error","catch","handleChange","event","target","value","checkName","player","nameGiven","toLowerCase","includes","className","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","filter","map","key","ID","_c","$RefreshReg$"],"sources":["D:/2B/cs348/Project/baseball-app/client/src/pages/Players.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Players() {\r\n    const [listOfForms, setListOfForms] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // fetch always succeeds (besides network error), so need additional error checking\r\n        fetch(\"http://localhost:3001/player\", {\r\n          method: \"GET\",\r\n          headers: {\r\n\r\n          },\r\n          body: JSON.stringify\r\n        })\r\n          .then((res) => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            } else {\r\n              console.log(\"FETCH failed\");\r\n            }\r\n          })\r\n          .then((data) => {\r\n            if (data.error) {\r\n              console.log(data.error);\r\n            } else {\r\n              setListOfForms(data);\r\n            }\r\n          })\r\n          .catch((error) => console.log(\"ERROR\", error));\r\n      }, []);\r\n\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    \r\n    function checkName(player) {\r\n        return player.nameGiven.toLowerCase().includes(name.toLowerCase());\r\n    }\r\n\r\n  return (\r\n    <div className=\"Players\">\r\n        <input\r\n        name=\"player\"\r\n        onChange={handleChange}\r\n        placeholder=\"Search by name\"\r\n      />\r\n      {listOfForms.filter(checkName).map((player, key) => (\r\n        <div className=\"playerName\" key={player.ID}>\r\n          <h4>\r\n            {player.nameGiven} \r\n          </h4> \r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ;IACAU,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE,CAET,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC;IACb,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,EAAE,EAAE;QACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACnB,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,KAAK,EAAE;QACdH,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLhB,cAAc,CAACe,IAAI,CAAC;MACtB;IACF,CAAC,CAAC,CACDE,KAAK,CAAED,KAAK,IAAKH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAER,SAASE,YAAYA,CAACC,KAAK,EAAE;IACzBjB,OAAO,CAACiB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B;EAEA,SAASC,SAASA,CAACC,MAAM,EAAE;IACvB,OAAOA,MAAM,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACzB,IAAI,CAACwB,WAAW,CAAC,CAAC,CAAC;EACtE;EAEF,oBACE7B,OAAA;IAAK+B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBhC,OAAA;MACAK,IAAI,EAAC,QAAQ;MACb4B,QAAQ,EAAEX,YAAa;MACvBY,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EACDnC,WAAW,CAACoC,MAAM,CAACb,SAAS,CAAC,CAACc,GAAG,CAAC,CAACb,MAAM,EAAEc,GAAG,kBAC7CzC,OAAA;MAAK+B,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBhC,OAAA;QAAAgC,QAAA,EACGL,MAAM,CAACC;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC,GAH0BX,MAAM,CAACe,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIrC,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpC,EAAA,CAtDQD,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AAwDhB,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}